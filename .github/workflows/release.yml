name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}

      - name: Install if uncached
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: npm ci

      - name: Re-cache node_modules if uncached
        uses: actions/cache@v2
        if: ${{ !steps.cache.outputs.cache-hit }}
        id: recache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}

  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}

      - name: Build
        run: npm run build

      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: public
          key: public-${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}

      - name: Install
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: npm ci

      - name: Lint JS
        env:
          NODE_ENV: test
        run: npm run lint:js

      - name: Lint CSS
        run: npm run lint:css

      - name: Lint formatting
        run: npm run lint:format

      - name: Check types
        run: npm run type-check

  release:
    runs-on: ubuntu-latest
    needs: [build, lint]
    steps:
      - uses: actions/checkout@v2

      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: public/**/*
          key: public-${{ github.sha }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: public/
        env:
          GITHUB_TOKEN: ${{ secrets.USER_GITHUB_PAT }}
